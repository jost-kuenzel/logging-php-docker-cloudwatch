AWSTemplateFormatVersion: 2010-09-09
Description: Builds a pipeline

Parameters:
  GithubUserName:
    Type: String
  GithubRepo:
    Type: String
  GithubBranch:
    Type: String
  GithubOAuthToken:
    Type: String
  ContainerPort:
    Type: Number
    Default: 8080

Resources:
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName:
        !Join ["-", [!Ref "AWS::StackName", !Ref "AWS::AccountId"]]

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        !Join [
          "-",
          [
            !Ref "AWS::StackName",
            !Ref "AWS::AccountId",
            "codepipeline-artifacts",
          ],
        ]

  CodePipeLineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  CodeBuildExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CloudformationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: True
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ECR_REPOSITORY_URI
            Value:
              !Join [
                ".",
                [
                  !Ref "AWS::AccountId",
                  "dkr.ecr",
                  !Ref "AWS::Region",
                  !Join ["/", ["amazonaws.com", !Ref "ECRRepository"]],
                ],
              ]
      Name: !Join ["-", [!Ref "AWS::StackName", !Ref "AWS::AccountId"]]
      ServiceRole: !Ref CodeBuildExecutionRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: cloudformation/buildspec.yml

  CodePipeLine:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: S3Bucket
    Properties:
      ArtifactStore:
        Location:
          !Join [
            "-",
            [
              !Ref "AWS::StackName",
              !Ref "AWS::AccountId",
              "codepipeline-artifacts",
            ],
          ]
        Type: S3
      Name: !Join ["-", [!Ref "AWS::StackName", !Ref "AWS::AccountId"]]
      RestartExecutionOnUpdate: False
      RoleArn:
        Fn::GetAtt: [CodePipeLineExecutionRole, Arn]

      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Repo: !Ref GithubRepo
                Branch: !Ref GithubBranch
                Owner: !Ref GithubUserName
                OAuthToken: !Ref GithubOAuthToken
              RunOrder: 1
              OutputArtifacts:
                - Name: source-artifacts

        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: build-artifacts
              InputArtifacts:
                - Name: source-artifacts
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              InputArtifacts:
                - Name: source-artifacts
                - Name: build-artifacts
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: !Sub |
                  {
                    "ImageURI" : { "Fn::GetParam" : ["build-artifacts", "image.json", "ImageURI"] },
                    "ContainerPort": "${ContainerPort}"
                  }
                RoleArn:
                  Fn::GetAtt: [CloudformationExecutionRole, Arn]
                StackName:
                  !Join [
                    "-",
                    [!Ref "AWS::StackName", !Ref "AWS::AccountId", "ecs"],
                  ]
                TemplatePath: source-artifacts::cloudformation/ecs.yml
              RunOrder: 1
